
name: Deploy Next.js App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Deploy to VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            cd ~/apps/next-frontend

            echo "üì• Pulling latest changes from GitHub..."
            # Stash local changes to package.json before pulling
            git stash
            git pull origin main
            # Apply stashed changes if needed (optional)
            git stash pop || echo "No stashed changes to apply or merge conflict occurred"

            # ƒê·∫£m b·∫£o file c·∫•u h√¨nh ESLint v√† Next.js t·ªìn t·∫°i
            if [ ! -f .eslintrc.json ]; then
              echo '{
                "extends": "next/core-web-vitals",
                "rules": {
                  "@typescript-eslint/no-explicit-any": "off",
                  "@typescript-eslint/no-unused-vars": "off",
                  "react/no-unescaped-entities": "off",
                  "react/jsx-no-undef": "off",
                  "react-hooks/exhaustive-deps": "off",
                  "@typescript-eslint/no-empty-object-type": "off",
                  "@next/next/no-img-element": "off"
                }
              }' > .eslintrc.json
            fi

            if [ ! -f next.config.js ]; then
              echo '/** @type {import("next").NextConfig} */
              const nextConfig = {
                eslint: {
                  // T·∫Øt ki·ªÉm tra ESLint trong qu√° tr√¨nh build
                  ignoreDuringBuilds: true,
                },
                typescript: {
                  // T·∫Øt ki·ªÉm tra TypeScript trong qu√° tr√¨nh build
                  ignoreBuildErrors: true,
                },
                // B·ªè qua l·ªói khi export
                output: "standalone",
              };

              module.exports = nextConfig;' > next.config.js
            fi

            # T·∫°o file ƒë·ªãnh nghƒ©a ki·ªÉu PageProps n·∫øu ch∆∞a t·ªìn t·∫°i
            mkdir -p src/types
            if [ ! -f src/types/page.ts ]; then
              echo '// ƒê·ªãnh nghƒ©a ki·ªÉu d·ªØ li·ªáu cho props c·ªßa c√°c page trong Next.js 15
              export interface PageProps {
                params: Promise<Record<string, string>>;
                searchParams?: Promise<Record<string, string | string[]>>;
              }' > src/types/page.ts
            fi

            # T·∫°o file not-found.tsx n·∫øu ch∆∞a t·ªìn t·∫°i
            mkdir -p src/app
            if [ ! -f src/app/not-found.tsx ]; then
              echo 'import Link from "next/link";

              export default function NotFound() {
                return (
                  <div className="flex flex-col items-center justify-center min-h-screen px-4 text-center">
                    <h1 className="text-6xl font-bold text-gray-900 dark:text-white">404</h1>
                    <h2 className="mt-4 text-2xl font-semibold text-gray-700 dark:text-gray-300">
                      Kh√¥ng t√¨m th·∫•y trang
                    </h2>
                    <p className="mt-2 text-gray-600 dark:text-gray-400">
                      Trang b·∫°n ƒëang t√¨m ki·∫øm kh√¥ng t·ªìn t·∫°i ho·∫∑c ƒë√£ b·ªã di chuy·ªÉn.
                    </p>
                    <Link
                      href="/"
                      className="mt-6 px-4 py-2 text-white bg-blue-600 rounded hover:bg-blue-700 transition-colors"
                    >
                      Quay v·ªÅ trang ch·ªß
                    </Link>
                  </div>
                );
              }' > src/app/not-found.tsx
            fi

            echo "üì¶ Installing dependencies..."
            yarn install

            echo "üî® Building Next.js app..."
            yarn build

            echo "üöÄ Restarting PM2 process..."
            pm2 restart next-frontend || pm2 start yarn --name "next-frontend" -- start
          EOF
